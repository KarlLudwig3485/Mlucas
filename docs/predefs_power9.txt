10/27/21: Simon Josefsson [a.ka.k jas] predefs for his Raptor Computing System Talos II Lite with a POWER9 18c|72t CPU.

'grep -i power' returns:
185:#define __powerpc__ 1
241:#define __powerpc64__ 1
730:#define __POWER8_VECTOR__ 1

CF.
https://www.researchgate.net/publication/299472451_Workload_acceleration_with_the_IBM_POWER_vector-scalar_architecture

Underlying base SIMD is just PowerPC's AltiVec
As of Power8, POWER uses single 64-entry unified vector-scalar register file with 128-bit-wide
entries VSR[0:63], usable by up to 64 64-bit floats (legacy 64-bit float instructions use FPR[0:31]
which map to low halves of VSR[0:31]), and up to 64 128-bit vector ops, 32 in the 128-bit extended
FPR[0:31] which map to low halves of VSR[0:31], and 32 more in the 32 AltiVec registers VR[0:31]
which map to VSR[32:63]; legacy AltiVec float instructions use VR[0:31].

New vector-scalar instructions can all of VSR[0:63] via 6-bit register specifier - here IBM:

"To use the full vector-scalar register file, we introduce a new set of instructions, the vector-scalar instructions, addressing the entire 64-entry register file using 6-bit register specifiers. Instructions with 6-bit register specifiers are new to the architecture, and traditional instruction encodings make it difficult to efficiently integrate them with existing 5-bit specifiers in a design. To simplify decoding of floating-point, vector, and new vector-scalar register operands, we implement new VS register specifiers using a non-contiguous specifier format. Thus, the low-order 5 bits of a register specifier are always in the same position, regardless of whether instructions use a 5-bit or a 6-bit register specifier. The new vector-scalar instructions specify an additional sixth bit in a separate instruction field. Thus, when decoding instructions directed at execution in the vector-scalar unit, the sixth bit is then either set to zero (0), for legacy scalar floating-point instructions; to one (1), for AltiVec instructions; and to the extended specifier bit, for new vector-scalar instructions addressing all 64 VS registers (VSRs) [7]."
[Q: any 256-bit support?]

Mlucas-self-tests:
1c1t:
      2048  msec/iter =   75.75  ROE[avg,max] = [0.161886161, 0.187500000]  radices = 1024 32 32  0  0  0  0  0  0  0
      2304  msec/iter =   91.21  ROE[avg,max] = [0.158895438, 0.187500000]  radices =  36 32 32 32  0  0  0  0  0  0
      2560  msec/iter =  108.66  ROE[avg,max] = [0.188839286, 0.250000000]  radices =  40 32 32 32  0  0  0  0  0  0
      2816  msec/iter =  114.73  ROE[avg,max] = [0.170926339, 0.218750000]  radices =  44 32 32 32  0  0  0  0  0  0
      3072  msec/iter =  121.73  ROE[avg,max] = [0.175083705, 0.218750000]  radices =  48 32 32 32  0  0  0  0  0  0
      3328  msec/iter =  137.32  ROE[avg,max] = [0.242410714, 0.312500000]  radices =  52 32 32 32  0  0  0  0  0  0
      3584  msec/iter =  144.97  ROE[avg,max] = [0.229241071, 0.281250000]  radices =  56 32 32 32  0  0  0  0  0  0
      3840  msec/iter =  157.38  ROE[avg,max] = [0.169998605, 0.203125000]  radices =  60 32 32 32  0  0  0  0  0  0
      4096  msec/iter =  163.65  ROE[avg,max] = [0.233258929, 0.281250000]  radices = 128 32 32 16  0  0  0  0  0  0
      4608  msec/iter =  183.77  ROE[avg,max] = [0.174515206, 0.218750000]  radices = 144 32 32 16  0  0  0  0  0  0
      5120  msec/iter =  234.53  ROE[avg,max] = [0.234598214, 0.281250000]  radices = 160 32 32 16  0  0  0  0  0  0
      5632  msec/iter =  228.97  ROE[avg,max] = [0.181417411, 0.218750000]  radices = 176 32 32 16  0  0  0  0  0  0
      6144  msec/iter =  252.87  ROE[avg,max] = [0.209709821, 0.250000000]  radices = 192 32 32 16  0  0  0  0  0  0
      6656  msec/iter =  272.22  ROE[avg,max] = [0.177399554, 0.187500000]  radices = 208 32 32 16  0  0  0  0  0  0
      7168  msec/iter =  291.60  ROE[avg,max] = [0.181417411, 0.218750000]  radices = 224 32 32 16  0  0  0  0  0  0
      7680  msec/iter =  352.16  ROE[avg,max] = [0.186188616, 0.218750000]  radices = 240 32 32 16  0  0  0  0  0  0
Thanks - what does "grep passed test.log" give?

Suggest you save that 1-core/1-thread cfg-file as mlucas.cfg.1c1t so subsequent self-tests don't overwrite it.

Still haven't found any docs which explain the logical core numbering convention for your SMT4 setup. So let's see if there any appreciable difference between the 4-thread timings given by the following:

./Mlucas -s m -cpu 0:3 >& test2.log
./Mlucas -s m -cpu 0:71:18 >& test3.log

The first uses the AMD core numbering convention, logical cores 0-3 all map to the same physical core; the second uses the Intel convention, where for an 18-physical-core 4-way-SMT CPU, logical cores 0,18,36,54 all map to the same physical core. I plan to add support for the hwloc topology-extracting freeware library next year, need to see if there's a simple way to build/install that in standalone mode so one can just use it as-is to get topology for one's platform.

It would be best to suspend/restart your ongoing DCs and whatnot via 'kill -[STOP|CONT] pid' to run the above. Based on your 1c1t runtime, each should take ~10 minutes.


==============================
#define __FLOAT128__ 1
#define __builtin_nanq __builtin_nanf128
#define __DBL_MIN_EXP__ (-1021)
#define ____sigset_t_defined
#define __LDBL_MANT_DIG__ 106
#define __builtin_vsx_xvmsubmsp __builtin_vsx_xvmsubsp
#define PRIO_MIN -20
#define __UINT_LEAST16_MAX__ 0xffff
#define __VSX__ 1
#define __ATOMIC_ACQUIRE 2
#define __GCC_IEC_559_COMPLEX 2
#define __NFDBITS (8 * (int) sizeof (__fd_mask))
#define __GLIBC_USE(F) __GLIBC_USE_ ## F
#define __UINT_LEAST8_TYPE__ unsigned char
#define __flexarr []
#define __VEC__ 10206
#define __S64_TYPE long int
#define __stub_fchflags
#define __SQUAD_TYPE long int
#define __INTMAX_C(c) c ## L
#define _BSD_SIZE_T_DEFINED_
#define __FLT64X_MIN_10_EXP__ (-4931)
#define __CHAR_BIT__ 8
#define __FSWORD_T_TYPE __SWORD_TYPE
#define _ARCH_PPCGR 1
#define __UINT8_MAX__ 0xff
#define __builtin_vsx_xvmsubmdp __builtin_vsx_xvmsubdp
#define OS_TYPE_LINUX
#define __feof_unlocked_body(_fp) (((_fp)->_flags & _IO_EOF_SEEN) != 0)
#define __builtin_vsx_xvnmaddadp __builtin_vsx_xvnmadddp
#define __WINT_MAX__ 0xffffffffU
#define __sigset_t_defined 1
#define __FLT32_MIN_EXP__ (-125)
#define __PPC64__ 1
#define __RECIPF__ 1
#define stderr stderr
#define __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))
#define __builtin_vsx_xxlnor __builtin_vec_nor
#define ITIMER_VIRTUAL ITIMER_VIRTUAL
#define RLIM_NLIMITS __RLIM_NLIMITS
#define __OFF_T_MATCHES_OFF64_T 1
#define __builtin_vsx_xvnmsubmdp __builtin_vsx_xvnmsubdp
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __SIZE_MAX__ 0xffffffffffffffffUL
#define CPU_NAME "PowerPC"
#define ALIGN_VEC_U64(_p) ALIGN_UINT64(_p)
#define __WCHAR_MAX__ 0x7fffffff
#define RLIMIT_AS RLIMIT_AS
#define __BLKCNT_T_TYPE __SLONGWORD_TYPE
#define __STATFS_MATCHES_STATFS64 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
#define __DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
#define __GCC_ATOMIC_CHAR_LOCK_FREE 2
#define __ALTIVEC__ 1
#define __GCC_IEC_559 2
#define __FLT32X_DECIMAL_DIG__ 17
#define _LITTLE_ENDIAN 1
#define _IOFBF 0
#define __builtin_nansq __builtin_nansf128
#define __FLT_EVAL_METHOD__ 0
#define _IO_USER_LOCK 0x8000
#define __ASMNAME2(prefix,cname) __STRING (prefix) cname
#define __FLT64_DECIMAL_DIG__ 17
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
#define STRNEQN(s1,s2,n) ( strncmp(s1,s2,n))
#define __FLOAT_WORD_ORDER __BYTE_ORDER
#define __attribute_nonstring__ __attribute__ ((__nonstring__))
#define pixel pixel
#define _ARCH_PPCSQ 1
#define bool bool
#define __STDC_IEC_559__ 1
#define __UINT_FAST64_MAX__ 0xffffffffffffffffUL
#define __SIG_ATOMIC_TYPE__ int
#define __GID_T_TYPE __U32_TYPE
#define __id_t_defined
#define __UINT_LEAST64_MAX__ 0xffffffffffffffffUL
#define __attribute_alloc_size__(params) __attribute__ ((__alloc_size__ params))
#define ALLOC_COMPLEX(_p,_n) (struct complex*)realloc(_p,(_n)*sizeof(struct complex)+512)
#define RUSAGE_CHILDREN RUSAGE_CHILDREN
#define __GNUC_PATCHLEVEL__ 1
#define __FLT32_HAS_DENORM__ 1
#define L2_SZ_VD 3
#define __builtin_vsx_xvnmaddasp __builtin_vsx_xvnmaddsp
#define __UINT_FAST8_MAX__ 0xff
#define __LEAF , __leaf__
#define ALIGN_COMPLEX(_p) (struct complex*)(((long)(_p) | 127)+1)
#define __LDBL_REDIR1(name,proto,alias) name proto
#define __FLT64X_MAX__ 1.18973149535723176508575932662800702e+4932F64x
#define __FLT32_MAX_10_EXP__ 38
#define __DEC64_MAX_EXP__ 385
#define __INT8_C(c) c
#define _SYS_TIME_H 1
#define MOD_SUB64(__x,__y,__q,__z) MOD_ADD64(__x, __q - __y, __q, __z)
#define __INT_LEAST8_WIDTH__ 8
#define __always_inline __inline __attribute__ ((__always_inline__))
#define NFDBITS __NFDBITS
#define __SHRT_MAX__ 0x7fff
#define __LDBL_MAX__ 1.79769313486231580793728971405301199e+308L
#define RLIMIT_NLIMITS __RLIMIT_NLIMITS
#define __FLT64X_MAX_10_EXP__ 4932
#define _IO_EOF_SEEN 0x0010
#define __fortify_function __extern_always_inline __attribute_artificial__
#define __FLT64X_HAS_QUIET_NAN__ 1
#define __UINT_LEAST8_MAX__ 0xff
#define __GCC_ATOMIC_BOOL_LOCK_FREE 2
#define __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
#define __builtin_huge_valq __builtin_huge_valf128
#define __linux 1
#define __DEC32_EPSILON__ 1E-6DF
#define __HTM__ 1
#define __FLT_EVAL_METHOD_TS_18661_3__ 0
#define _BITS_TYPES_H 1
#define __CHAR_UNSIGNED__ 1
#define DNINT(x) lrint((x))
#define __UINT32_MAX__ 0xffffffffU
#define __UID_T_TYPE __U32_TYPE
#define __SIZE_T
#define __LDBL_MAX_EXP__ 1024
#define RLIMIT_DATA RLIMIT_DATA
#define _ATFILE_SOURCE 1
#define __FD_MASK(d) ((__fd_mask) (1UL << ((d) % __NFDBITS)))
#define __THROW __attribute__ ((__nothrow__ __LEAF))
#define __FLT128_MIN_EXP__ (-16381)
#define __TIME_T_TYPE __SLONGWORD_TYPE
#define __WINT_MIN__ 0U
#define __builtin_vsx_xvmaddmdp __builtin_vsx_xvmadddp
#define STREQ(s1,s2) (!strcmp(s1,s2))
#define __builtin_vsx_vperm __builtin_vec_perm
#define __FLT128_MIN_10_EXP__ (-4931)
#define __INT_LEAST16_WIDTH__ 16
#define _SIZE_T_DEFINED_
#define ALIGN_f128(_p) (__float128 *)(((long)(_p) | 127)+1)
#define __LDBL_REDIR_NTH(name,proto) name proto __THROW
#define __SCHAR_MAX__ 0x7f
#define __FLT128_MANT_DIG__ 113
#define HERE __LINE__, __FILE__
#define __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
#define __KERNEL_STRICT_NAMES
#define vector vector
#define __builtin_vsx_xvnmsubmsp __builtin_vsx_xvnmsubsp
#define align_h_included
#define __NTH(fct) __attribute__ ((__nothrow__ __LEAF)) fct
#define __GCC_ATOMIC_POINTER_LOCK_FREE 2
#define __ATOMIC_SEQ_CST 5
#define __GLIBC_USE_IEC_60559_TYPES_EXT 0
#define __FLT32X_MAX_EXP__ 1024
#define _POSIX_SOURCE 1
#define __SIZEOF_INT__ 4
#define _DEFAULT_SOURCE 1
#define SZ_VDM1 7
#define RLIMIT_LOCKS __RLIMIT_LOCKS
#define __attribute_used__ __attribute__ ((__used__))
#define __FLT32X_MANT_DIG__ 53
#define __USER_LABEL_PREFIX__
#define ALIGN_QFLOAT(_p) ALIGN_UINT128(_p)
#define RLIM_INFINITY ((__rlim_t) -1)
#define __glibc_macro_warning(message) __glibc_macro_warning1 (GCC warning message)
#define _BITS_ENDIANNESS_H 1
#define __END_DECLS
#define __CONCAT(x,y) x ## y
#define BIT_CLR(x,b) ( (x) &= ~(1 << (b)) )
#define __warndecl(name,msg) extern void name (void) __attribute__((__warning__ (msg)))
#define __SLONG32_TYPE int
#define PRIO_PGRP PRIO_PGRP
#define _SYS_SELECT_H 1
#define _ARCH_PWR5 1
#define _ARCH_PWR6 1
#define _ARCH_PWR7 1
#define _ARCH_PWR8 1
#define __SSIZE_T_TYPE __SWORD_TYPE
#define PRIO_PROCESS PRIO_PROCESS
#define TMP_MAX 238328
#define BIT_SETC(x,b,condition) ( (x) |= ((condition) << (b)) )
#define __builtin_vsx_xvmaddmsp __builtin_vsx_xvmaddsp
#define __INT64_C(c) c ## L
#define __CMODEL_MEDIUM__ 1
#define __GNU_LIBRARY__ 6
#define __DBL_DIG__ 15
#define __FLT32_DIG__ 6
#define __RLIM_T_MATCHES_RLIM64_T 1
#define __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
#define __powerpc__ 1
#define __RLIM_T_TYPE __ULONGWORD_TYPE
#define __SHRT_WIDTH__ 16
#define __FLT128_MAX_10_EXP__ 4932
#define _STDIO_H 1
#define ALLOC_POINTER(_p,_ptr_type,_n) (_ptr_type*)realloc(_p,(_n)*sizeof(_ptr_type)+64)
#define __DEV_T_TYPE __UQUAD_TYPE
#define __FINITE_MATH_ONLY__ 0
#define __GLIBC_USE_ISOC2X 0
#define STREQN(s1,s2,n) (!strncmp(s1,s2,n))
#define __LDBL_MIN__ 2.00416836000897277799610805135016205e-292L
#define __STDC_UTF_16__ 1
#define __nonnull(params) __attribute__ ((__nonnull__ params))
#define __DEC32_MAX__ 9.999999E96DF
#define OS_POSIX_COMPLIANT
#define __LONG_DOUBLE_USES_FLOAT128 0
#define __FLT64X_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F64x
#define __FP_FAST_FMA 1
#define __LONG_MAX__ 0x7fffffffffffffffL
#define _VA_LIST_DEFINED
#define __FLT32X_HAS_INFINITY__ 1
#define COMPILER_NAME "Gnu C [or other compatible]"
#define __INT32_MAX__ 0x7fffffff
#define __GLIBC_USE_DEPRECATED_GETS 0
#define __unix__ 1
#define __INT_WIDTH__ 32
#define _IONBF 2
#define ALIGN_UINT(_p) (uint *)(((long)(_p) | 63)+1)
#define __STDC_ISO_10646__ 201706L
#define __UINT16_C(c) c
#define ALLOC_INT(_p,_n) (int *)realloc(_p,(_n)*sizeof(int )+256)
#define __DECIMAL_DIG__ 33
#define __NTHNL(fct) __attribute__ ((__nothrow__)) fct
#define __STDC_IEC_559_COMPLEX__ 1
#define __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
#define __gnu_linux__ 1
#define __INT16_MAX__ 0x7fff
#define __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))
#define __UQUAD_TYPE unsigned long int
#define __LDBL_HAS_QUIET_NAN__ 1
#define __USE_ISOC11 1
#define __FLT64_MANT_DIG__ 53
#define __attribute_const__ __attribute__ ((__const__))
#define _CALL_LINUX 1
#define __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
#define L_tmpnam 20
#define __GNUC__ 10
#define __SYSCALL_ULONG_TYPE __ULONGWORD_TYPE
#define __pie__ 2
#define L_ctermid 9
#define __OFF64_T_TYPE __SQUAD_TYPE
#define FD_SET(fd,fdsetp) __FD_SET (fd, fdsetp)
#define __FLT_HAS_DENORM__ 1
#define __SIZEOF_LONG_DOUBLE__ 16
#define __timeval_defined 1
#define RLIMIT_SIGPENDING __RLIMIT_SIGPENDING
#define __powerpc64__ 1
#define __LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW
#define SEEK_CUR 1
#define USE_FMADD
#define __BIGGEST_ALIGNMENT__ 16
#define __QUAD_MEMORY_ATOMIC__ 1
#define __GLIBC_USE_DEPRECATED_SCANF 0
#define __FLT64_MAX_10_EXP__ 308
#define __USE_ISOC95 1
#define __USE_ISOC99 1
#define RLIMIT_OFILE __RLIMIT_OFILE
#define __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)
#define __WCHAR_TYPE__ int
#define ALLOC_VEC_DBL(_p,_n) ALLOC_DOUBLE(_p,_n)
#define __DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
#define __INT_FAST32_MAX__ 0x7fffffffffffffffL
#define __DBL_HAS_INFINITY__ 1
#define _ARCH_PWR5X 1
#define __GLIBC_USE_IEC_60559_FUNCS_EXT 0
#define __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
#define stdin stdin
#define __builtin_vsx_xvnmaddmdp __builtin_vsx_xvnmadddp
#define __USE_FORTIFY_LEVEL 0
#define __USE_XOPEN2K 1
#define __HAVE_SPECULATION_SAFE_VALUE 1
#define ALLOC_FLOAT(_p,_n) (float *)realloc(_p,(_n)*sizeof(float )+256)
#define ALIGN_FLOAT(_p) (float *)(((long)(_p) | 63)+1)
#define __DEC32_MIN_EXP__ (-94)
#define __builtin_vsx_xxlandc __builtin_vec_andc
#define __DADDR_T_TYPE __S32_TYPE
#define __INTPTR_WIDTH__ 64
#define __FLT64X_HAS_INFINITY__ 1
#define __UINT_LEAST32_MAX__ 0xffffffffU
#define ALIGN_UINT128(_p) (uint128 *)(((long)(_p) | 63)+1)
#define __FD_SETSIZE 1024
#define __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))
#define __FLT32X_HAS_DENORM__ 1
#define __INT_FAST16_TYPE__ long int
#define _SIZE_T_DEFINED
#define __USE_POSIX199506 1
#define _FEATURES_H 1
#define __LDBL_HAS_DENORM__ 1
#define __stub_setlogin
#define __FLT128_HAS_INFINITY__ 1
#define __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
#define __DEC32_MIN__ 1E-95DF
#define __S32_TYPE int
#define ALLOC_f128(_p,_n) (__float128 *)realloc(_p,(_n)*sizeof(__float128 )+512)
#define __glibc_unlikely(cond) __builtin_expect ((cond), 0)
#define __DBL_MAX_EXP__ 1024
#define __WCHAR_WIDTH__ 32
#define __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
#define __DEC128_EPSILON__ 1E-33DL
#define __GCC_ATOMIC_LONG_LOCK_FREE 2
#define __WORDSIZE_TIME64_COMPAT32 1
#define __FSFILCNT_T_TYPE __ULONGWORD_TYPE
#define __GLIBC_USE_IEC_60559_BFP_EXT 0
#define __PTRDIFF_MAX__ 0x7fffffffffffffffL
#define STRNEQ(s1,s2) ( strcmp(s1,s2))
#define __CPU_MASK_TYPE __ULONGWORD_TYPE
#define timerisset(tvp) ((tvp)->tv_sec || (tvp)->tv_usec)
#define __OFF_T_TYPE __SLONGWORD_TYPE
#define __STRUCT_PARM_ALIGN__ 16
#define __TM_FENCE__ 1
#define __FLT32_HAS_QUIET_NAN__ 1
#define ALLOC_UINT128(_p,_n) (uint128 *)realloc(_p,(_n+_n)*sizeof(uint64 )+256)
#define __LONG_LONG_MAX__ 0x7fffffffffffffffLL
#define __SIZEOF_SIZE_T__ 8
#define IS_ODD(a) ( (int)(a) & 1)
#define __builtin_vsx_xvnmaddmsp __builtin_vsx_xvnmaddsp
#define __PPC__ 1
#define __FLT64X_MANT_DIG__ 113
#define __FD_ZERO(s) do { unsigned int __i; fd_set *__arr = (s); for (__i = 0; __i < sizeof (fd_set) / sizeof (__fd_mask); ++__i) __FDS_BITS (__arr)[__i] = 0; } while (0)
#define NINT(x) floor(x + 0.5)
#define BIT_SET(x,b) ( (x) |= (1 << (b)) )
#define _____fpos64_t_defined 1
#define __FLT64X_MIN_EXP__ (-16381)
#define __SIZEOF_WINT_T__ 4
#define __LONG_LONG_WIDTH__ 64
#define __putc_unlocked_body(_ch,_fp) (__glibc_unlikely ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))
#define __U16_TYPE unsigned short int
#define platform_h_included
#define CPU_SUBTYPE
#define __FLT32_MAX_EXP__ 128
#define FP_MANTISSA_BITS_DOUBLE 53
#define _SIGSET_NWORDS (1024 / (8 * sizeof (unsigned long int)))
#define __GXX_ABI_VERSION 1014
#define COMPILER_TYPE_GCC
#define __builtin_infq __builtin_inff128
#define ALIGN_INT(_p) (int *)(((long)(_p) | 63)+1)
#define __RECIP__ 1
#define __FLT_MIN_EXP__ (-125)
#define __GCC_HAVE_DWARF2_CFI_ASM 1
#define ITIMER_REAL ITIMER_REAL
#define __glibc_clang_has_extension(ext) 0
#define ALLOC_VEC_U64(_p,_n) ALLOC_UINT64(_p,_n)
#define __attribute_copy__(arg) __attribute__ ((__copy__ (arg)))
#define __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))
#define __extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))
#define _BSD_SIZE_T_
#define __HAVE_GENERIC_SELECTION 1
#define __FP_FAST_FMAF 1
#define __FLT128_NORM_MAX__ 1.18973149535723176508575932662800702e+4932F128
#define CPU_SUBTYPE_NAME "64-bit"
#define __DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)
#define __FP_FAST_FMAF64 1
#define __FLT64X_NORM_MAX__ 1.18973149535723176508575932662800702e+4932F64x
#define __LONGDOUBLE128 1
#define __builtin_vsx_xvmsubasp __builtin_vsx_xvmsubsp
#define ALIGN_VEC_DBL(_p) ALIGN_DOUBLE(_p)
#define __LP64__ 1
#define __DBL_HAS_QUIET_NAN__ 1
#define __pixel __attribute__((altivec(pixel__))) unsigned short
#define __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
#define __MODE_T_TYPE __U32_TYPE
#define _SYS_RESOURCE_H 1
#define __LEAF_ATTR __attribute__ ((__leaf__))
#define __FLT64_MIN_EXP__ (-1021)
#define __RLIM64_T_TYPE __UQUAD_TYPE
#define __extern_inline extern __inline __attribute__ ((__gnu_inline__))
#define __glibc_has_attribute(attr) __has_attribute (attr)
#define __FLT64_MIN_10_EXP__ (-307)
#define timerclear(tvp) ((tvp)->tv_sec = (tvp)->tv_usec = 0)
#define __FDS_BITS(set) ((set)->__fds_bits)
#define RLIMIT_MSGQUEUE __RLIMIT_MSGQUEUE
#define __FLT64X_DECIMAL_DIG__ 36
#define __REGISTER_PREFIX__
#define __INTPTR_MAX__ 0x7fffffffffffffffL
#define MIN(a,b) ((a) < (b) ? (a) : (b))
#define __BUILTIN_CPU_SUPPORTS__ 1
#define __builtin_vsx_xxland __builtin_vec_and
#define __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
#define __UINT8_TYPE__ unsigned char
#define __FLT_DIG__ 6
#define __NO_INLINE__ 1
#define __stub_chflags
#define __DEC_EVAL_METHOD__ 2
#define types_h_included
#define _ARCH_PPC 1
#define __FLT_MANT_DIG__ 24
#define __LDBL_DECIMAL_DIG__ 33
#define __VERSION__ "10.2.1 20210110"
#define FD_ZERO(fdsetp) __FD_ZERO (fdsetp)
#define MOD_ADD32(__x,__y,__q,__z) { uint32 cy,tmp; tmp = __x + __y; cy = tmp < (uint32)__x; __z = tmp - __q; cy -= (uint32)__z > tmp; __z = __z + (cy & __q); }
#define __UINT64_C(c) c ## UL
#define _SYS_CDEFS_H 1
#define ALLOC_QFLOAT(_p,_n) ALLOC_UINT128(_p,_n)
#define ARRAYS_DISJOINT(xarr,lenx,yarr,leny) ((yarr+leny <= xarr) || (yarr >= xarr+lenx))
#define _STDC_PREDEF_H 1
#define __USE_XOPEN2K8 1
#define MOD_ADD64(__x,__y,__q,__z) { uint64 cy,tmp; tmp = __x + __y; cy = tmp < (uint64)__x; __z = tmp - __q; cy -= (uint64)__z > tmp; __z = __z + (cy & __q); }
#define _____fpos_t_defined 1
#define __ULONG32_TYPE unsigned int
#define __INT_LEAST32_MAX__ 0x7fffffff
#define __GCC_ATOMIC_INT_LOCK_FREE 2
#define timercmp(a,b,CMP) (((a)->tv_sec == (b)->tv_sec) ? ((a)->tv_usec CMP (b)->tv_usec) : ((a)->tv_sec CMP (b)->tv_sec))
#define __FLT128_MAX_EXP__ 16384
#define __UINTMAX_TYPE__ long unsigned int
#define __INO_T_TYPE __ULONGWORD_TYPE
#define RLIMIT_CPU RLIMIT_CPU
#define __UWORD_TYPE unsigned long int
#define IS_EVEN(a) (~(int)(a) & 1)
#define __ssize_t_defined
#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
#define __FLT32_MANT_DIG__ 24
#define _SYS_SIZE_T_H
#define __DEC128_MIN__ 1E-6143DL
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X 0
#define __SUSECONDS_T_TYPE __SLONGWORD_TYPE
#define __SIZE_T__
#define __stub_gtty
#define __NLINK_T_TYPE __UWORD_TYPE
#define __attribute_deprecated_msg__(msg) __attribute__ ((__deprecated__ (msg)))
#define HACK_ALIGN_STACK_ODD()
#define __stub_sstk
#define __glibc_macro_warning1(message) _Pragma (#message)
#define __wur
#define __FLT128_HAS_DENORM__ 1
#define __FLT128_DIG__ 33
#define __SCHAR_WIDTH__ 8
#define __UINT16_MAX__ 0xffff
#define __INT32_C(c) c
#define __DEC64_EPSILON__ 1E-15DD
#define __ORDER_PDP_ENDIAN__ 3412
#define __DEC128_MIN_EXP__ (-6142)
#define __PDP_ENDIAN 3412
#define RLIMIT_NPROC __RLIMIT_NPROC
#define __INT_FAST32_TYPE__ long int
#define __SIZEOF_INT128__ 16
#define _BITS_TYPESIZES_H 1
#define __SYSCALL_SLONG_TYPE __SLONGWORD_TYPE
#define __UINT_LEAST16_TYPE__ short unsigned int
#define __GLIBC_USE_IEC_60559_BFP_EXT_C2X 0
#define _SIZE_T_
#define unix 1
#define __DBL_HAS_DENORM__ 1
#define __THROWNL __attribute__ ((__nothrow__))
#define __SIZE_TYPE__ long unsigned int
#define __UINT64_MAX__ 0xffffffffffffffffUL
#define __va_arg_pack_len() __builtin_va_arg_pack_len ()
#define __ULONGWORD_TYPE unsigned long int
#define _SIZE_T_DECLARED
#define PRIO_USER PRIO_USER
#define ALIGN_POINTER(_p,_ptr_type) (_ptr_type*)(((long)(_p) | 63)+1)
#define __FLT64X_DIG__ 33
#define snprintf_nowarn(...) (snprintf(__VA_ARGS__) < 0 ? abort() : (void)0)
#define __INT8_TYPE__ signed char
#define __BIG_ENDIAN 4321
#define __ELF__ 1
#define CMUL(ar,ai,br,bi,cr,ci) { double __tmp = ar; ci = __tmp*bi + ai*br; cr = __tmp*br - ai*bi;}
#define TRUE 1
#define BIT_TEST(x,b) ( ((x) >> (b)) & 1 )
#define __ID_T_TYPE __U32_TYPE
#define __warnattr(msg) __attribute__((__warning__ (msg)))
#define __HAVE_BSWAP__ 1
#define __FLT_RADIX__ 2
#define __INT_LEAST16_TYPE__ short int
#define COMPILER_VERSION __VERSION__
#define __LDBL_EPSILON__ 4.94065645841246544176568792868221372e-324L
#define MULH64_FAST
#define __UINTMAX_C(c) c ## UL
#define _POSIX_C_SOURCE 200809L
#define SGN(x,b) ((b) == 1 ? -(x) : (x))
#define __builtin_copysignq __builtin_copysignf128
#define __UINT_FAST64_TYPE__ long unsigned int
#define __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
#define __LDBL_REDIR(name,proto) name proto
#define __SIG_ATOMIC_MAX__ 0x7fffffff
#define CPU_SUBTYPE_PPC64
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
#define __FSID_T_TYPE struct { int __val[2]; }
#define __SIZEOF_PTRDIFF_T__ 8
#define SEEK_SET 0
#define RLIMIT_CORE RLIMIT_CORE
#define __stub_sigreturn
#define __errordecl(name,msg) extern void name (void) __attribute__((__error__ (msg)))
#define __restrict_arr __restrict
#define __SIZEOF_LONG__ 8
#define __attribute_artificial__ __attribute__ ((__artificial__))
#define __USE_MISC 1
#define __DBL_MIN_10_EXP__ (-307)
#define __LDBL_DIG__ 31
#define __size_t
#define OS_VERSION "[Unknown]"
#define RLIMIT_RSS __RLIMIT_RSS
#define __FLT32X_MIN_EXP__ (-1021)
#define __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
#define HACK_ALIGN_STACK_EVEN()
#define __INT_FAST16_MAX__ 0x7fffffffffffffffL
#define __stub_revoke
#define __vector __attribute__((altivec(vector__)))
#define ABS(a) ((a) < 0 ? -(a) : (a))
#define __FLT64_DIG__ 15
#define __UINT_FAST32_MAX__ 0xffffffffffffffffUL
#define __UINT_LEAST64_TYPE__ long unsigned int
#define NULL ((void *)0)
#define __builtin_vsx_xvmsubadp __builtin_vsx_xvmsubdp
#define __builtin_vsx_xxsel __builtin_vec_sel
#define __U64_TYPE unsigned long int
#define __FLT_HAS_QUIET_NAN__ 1
#define __bool __attribute__((altivec(bool__))) unsigned
#define __FLT_MAX_10_EXP__ 38
#define __glibc_c99_flexarr_available 1
#define __FLT64X_HAS_DENORM__ 1
#define __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
#define __rusage_defined 1
#define __builtin_vsx_xxlxor __builtin_vec_xor
#define __FLT_HAS_INFINITY__ 1
#define __unix 1
#define __CRYPTO__ 1
#define __LONG_LONG_PAIR(HI,LO) LO, HI
#define __UINT_FAST16_TYPE__ long unsigned int
#define __bos0(ptr) __builtin_object_size (ptr, 0)
#define __DEC64_MAX__ 9.999999999999999E384DD
#define linux 1
#define __INT_FAST32_WIDTH__ 64
#define __CHAR16_TYPE__ short unsigned int
#define __PRAGMA_REDEFINE_EXTNAME 1
#define __SIZE_WIDTH__ 64
#define __BLKSIZE_T_TYPE __SLONGWORD_TYPE
#define __INT_LEAST16_MAX__ 0x7fff
#define __LONG_DOUBLE_IBM128__ 1
#define __stub_lchmod
#define __DEC64_MANT_DIG__ 16
#define __INT64_MAX__ 0x7fffffffffffffffL
#define _BITS_ENDIAN_H 1
#define __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
#define __SIG_ATOMIC_WIDTH__ 32
#define OS_TYPE
#define __INT_LEAST64_TYPE__ long int
#define __INT16_TYPE__ short int
#define __INT_LEAST8_TYPE__ signed char
#define __STDC_VERSION__ 201710L
#define __DEC32_MAX_EXP__ 97
#define __INT_FAST8_MAX__ 0x7f
#define __PMT(args) args
#define __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
#define __SIZEOF_POINTER__ 8
#define RLIM_SAVED_MAX RLIM_INFINITY
#define MOD_SUB32(__x,__y,__q,__z) MOD_ADD32(__x, __q - __y, __q, __z)
#define __FLT64_HAS_QUIET_NAN__ 1
#define ____FILE_defined 1
#define _IOLBF 1
#define ALLOC_UINT64(_p,_n) (uint64 *)realloc(_p,(_n)*sizeof(uint64 )+256)
#define __LITTLE_ENDIAN__ 1
#define __USE_POSIX2 1
#define __GLIBC__ 2
#define __FLT32_MIN_10_EXP__ (-37)
#define RE_IM_STRIDE 1
#define __KEY_T_TYPE __S32_TYPE
#define __FLT32X_DIG__ 15
#define COMPILER_TYPE
#define __PTRDIFF_WIDTH__ 64
#define __BEGIN_DECLS
#define __builtin_vsx_xvmaddadp __builtin_vsx_xvmadddp
#define __FLT64_HAS_INFINITY__ 1
#define __GNUC_VA_LIST
#define RLIMIT_NOFILE RLIMIT_NOFILE
#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
#define ALIGN_DOUBLE(_p) (double *)(((long)(_p) | 127)+1)
#define ALLOC_UINT(_p,_n) (uint *)realloc(_p,(_n)*sizeof(uint )+256)
#define FILENAME_MAX 4096
#define __RECIP_PRECISION__ 1
#define __builtin_fabsq __builtin_fabsf128
#define __INTPTR_TYPE__ long int
#define __UINT16_TYPE__ short unsigned int
#define __CLOCKID_T_TYPE __S32_TYPE
#define __SIZEOF_FLOAT__ 4
#define __SLONGWORD_TYPE long int
#define FALSE 0
#define __FLT64X_EPSILON__ 1.92592994438723585305597794258492732e-34F64x
#define __pic__ 2
#define __UINTPTR_MAX__ 0xffffffffffffffffUL
#define __INT_FAST64_WIDTH__ 64
#define __BYTE_ORDER __LITTLE_ENDIAN
#define __FLT32_DECIMAL_DIG__ 9
#define __USE_POSIX 1
#define __INT_FAST64_MAX__ 0x7fffffffffffffffL
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define __LITTLE_ENDIAN 1234
#define BUFSIZ 8192
#define __RSQRTE__ 1
#define RLIMIT_RTTIME __RLIMIT_RTTIME
#define __FLT_NORM_MAX__ 3.40282346638528859811704183484516925e+38F
#define __FLT32_HAS_INFINITY__ 1
#define __FLT64X_MAX_EXP__ 16384
#define __LDBL_REDIR_DECL(name)
#define __INT_MAX__ 0x7fffffff
#define __linux__ 1
#define ALIGN_INT64(_p) (int64 *)(((long)(_p) | 63)+1)
#define __REDIRECT_LDBL(name,proto,alias) __REDIRECT (name, proto, alias)
#define __S16_TYPE short int
#define _GCC_SIZE_T
#define __bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)
#define _T_SIZE_
#define __TIMESIZE __WORDSIZE
#define __LONG_DOUBLE_128__ 1
#define __FLT64_MAX_EXP__ 1024
#define __INT64_TYPE__ long int
#define RLIMIT_RTPRIO __RLIMIT_RTPRIO
#define __FLT_MAX_EXP__ 128
#define __builtin_vsx_xxlor __builtin_vec_or
#define __INT_FAST64_TYPE__ long int
#define __ORDER_BIG_ENDIAN__ 4321
#define __ptr_t void *
#define __DBL_MANT_DIG__ 53
#define ___int_size_t_h
#define __TIMER_T_TYPE void *
#define __LONG_DOUBLE_MATH_OPTIONAL 1
#define __FSBLKCNT64_T_TYPE __UQUAD_TYPE
#define __INT_LEAST64_MAX__ 0x7fffffffffffffffL
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
#define __FP_FAST_FMAF32 1
#define __GLIBC_MINOR__ 31
#define __DEC64_MIN__ 1E-383DD
#define __WINT_TYPE__ unsigned int
#define __UINT_LEAST32_TYPE__ unsigned int
#define __SIZEOF_SHORT__ 2
#define __FLT32_NORM_MAX__ 3.40282346638528859811704183484516925e+38F32
#define __LDBL_MIN_EXP__ (-968)
#define __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
#define FD_SETSIZE __FD_SETSIZE
#define stdout stdout
#define __WINT_WIDTH__ 32
#define __struct_FILE_defined 1
#define __REDIRECT_NTHNL(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROWNL
#define EOF (-1)
#define __INT_LEAST8_MAX__ 0x7f
#define __USE_POSIX199309 1
#define __INT_LEAST64_WIDTH__ 64
#define __RSQRTEF__ 1
#define __FLT32X_MAX_10_EXP__ 308
#define ____mbstate_t_defined 1
#define __BLKCNT64_T_TYPE __SQUAD_TYPE
#define __LDBL_MAX_10_EXP__ 308
#define __ATOMIC_RELAXED 0
#define RLIMIT_FSIZE RLIMIT_FSIZE
#define __FSBLKCNT_T_TYPE __ULONGWORD_TYPE
#define __DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)
#define __stub_stty
#define __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
#define _SIZET_
#define _LP64 1
#define __REDIRECT_NTH_LDBL(name,proto,alias) __REDIRECT_NTH (name, proto, alias)
#define __UINT8_C(c) c
#define RLIMIT_MEMLOCK __RLIMIT_MEMLOCK
#define __INT_LEAST32_TYPE__ int
#define SEEK_END 2
#define __SIZEOF_WCHAR_T__ 4
#define __USE_POSIX_IMPLICITLY 1
#define __REDIRECT_NTH(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROW
#define __FD_CLR(d,s) ((void) (__FDS_BITS (s)[__FD_ELT(d)] &= ~__FD_MASK(d)))
#define __FLT64_NORM_MAX__ 1.79769313486231570814527423731704357e+308F64
#define __FLT128_HAS_QUIET_NAN__ 1
#define __INTMAX_MAX__ 0x7fffffffffffffffL
#define __INT_FAST8_TYPE__ signed char
#define __PID_T_TYPE __S32_TYPE
#define __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
#define __LDBL_HAS_INFINITY__ 1
#define RLIMIT_NICE __RLIMIT_NICE
#define RLIM_SAVED_CUR RLIM_INFINITY
#define __GNUC_STDC_INLINE__ 1
#define __ferror_unlocked_body(_fp) (((_fp)->_flags & _IO_ERR_SEEN) != 0)
#define P_tmpdir "/tmp"
#define __attribute_pure__ __attribute__ ((__pure__))
#define __FLT64_HAS_DENORM__ 1
#define __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
#define __FP_FAST_FMAF32x 1
#define __DBL_DECIMAL_DIG__ 17
#define __STDC_UTF_32__ 1
#define _BITS_STDIO_LIM_H 1
#define __INT_FAST8_WIDTH__ 8
#define MAX(a,b) ((a) > (b) ? (a) : (b))
#define _SIZE_T
#define _IO_ERR_SEEN 0x0020
#define __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
#define __DBL_NORM_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
#define FOPEN_MAX 16
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __suseconds_t_defined
#define RUSAGE_SELF RUSAGE_SELF
#define __off_t_defined
#define __VEC_ELEMENT_REG_ORDER__ __ORDER_LITTLE_ENDIAN__
#define _STRUCT_TIMESPEC 1
#define __INTMAX_WIDTH__ 64
#define ALLOC_INT64(_p,_n) (int64 *)realloc(_p,(_n)*sizeof(int64 )+256)
#define __APPLE_ALTIVEC__ 1
#define __INO64_T_TYPE __UQUAD_TYPE
#define __UINT64_TYPE__ long unsigned int
#define __UINT32_C(c) c ## U
#define ITIMER_PROF ITIMER_PROF
#define __size_t__
#define __USECONDS_T_TYPE __U32_TYPE
#define __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
#define _BITS_TIME64_H 1
#define __TIME64_T_TYPE __TIME_T_TYPE
#define __builtin_vsx_xvnmsubasp __builtin_vsx_xvnmsubsp
#define __INT8_MAX__ 0x7f
#define __LONG_WIDTH__ 64
#define __STRING(x) #x
#define __PIC__ 2
#define __UINT_FAST32_TYPE__ long unsigned int
#define FD_ISSET(fd,fdsetp) __FD_ISSET (fd, fdsetp)
#define ALIGN_UINT64(_p) (uint64 *)(((long)(_p) | 63)+1)
#define OS_BITS 64
#define __INO_T_MATCHES_INO64_T 1
#define __FLT32X_NORM_MAX__ 1.79769313486231570814527423731704357e+308F32x
#define __CHAR32_TYPE__ unsigned int
#define __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
#define __builtin_vsx_xvnmsubadp __builtin_vsx_xvnmsubdp
#define __FLOAT128_TYPE__ 1
#define __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))
#define CPU_TYPE
#define __INT32_TYPE__ int
#define __float128 __ieee128
#define __SIZEOF_DOUBLE__ 8
#define BIT_FLIP(x,b) ( (x) ^= (1 << (b)) )
#define __FLT_MIN_10_EXP__ (-37)
#define __time_t_defined 1
#define __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
#define __INT_LEAST32_WIDTH__ 32
#define __SWORD_TYPE long int
#define __INTMAX_TYPE__ long int
#define __DEC128_MAX_EXP__ 6145
#define _T_SIZE
#define __INT16_C(c) c
#define __va_arg_pack() __builtin_va_arg_pack ()
#define ARRAYS_OVERLAP(xarr,lenx,yarr,leny) !ARRAYS_DISJOINT(xarr,lenx,yarr,leny)
#define __POWER8_VECTOR__ 1
#define _ARCH_PWR4 1
#define __FLT32X_HAS_QUIET_NAN__ 1
#define __ATOMIC_CONSUME 1
#define __GNUC_MINOR__ 2
#define __INT_FAST16_WIDTH__ 64
#define __UINTMAX_MAX__ 0xffffffffffffffffUL
#define __DEC32_MANT_DIG__ 7
#define __PIE__ 2
#define __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
#define __getc_unlocked_body(_fp) (__glibc_unlikely ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)
#define __glibc_clang_prereq(maj,min) 0
#define __builtin_vsx_xvmaddasp __builtin_vsx_xvmaddsp
#define __DBL_MAX_10_EXP__ 308
#define __FILE_defined 1
#define SZ_VD 8
#define __LDBL_DENORM_MIN__ 4.94065645841246544176568792868221372e-324L
#define __U32_TYPE unsigned int
#define timeradd(a,b,result) do { (result)->tv_sec = (a)->tv_sec + (b)->tv_sec; (result)->tv_usec = (a)->tv_usec + (b)->tv_usec; if ((result)->tv_usec >= 1000000) { ++(result)->tv_sec; (result)->tv_usec -= 1000000; } } while (0)
#define FD_CLR(fd,fdsetp) __FD_CLR (fd, fdsetp)
#define timersub(a,b,result) do { (result)->tv_sec = (a)->tv_sec - (b)->tv_sec; (result)->tv_usec = (a)->tv_usec - (b)->tv_usec; if ((result)->tv_usec < 0) { --(result)->tv_sec; (result)->tv_usec += 1000000; } } while (0)
#define __STDC__ 1
#define __attribute_malloc__ __attribute__ ((__malloc__))
#define __PTRDIFF_TYPE__ long int
#define __attribute_noinline__ __attribute__ ((__noinline__))
#define __DEC64_MIN_EXP__ (-382)
#define ALLOC_DOUBLE(_p,_n) (double *)realloc(_p,(_n)*sizeof(double )+512)
#define __FD_SET(d,s) ((void) (__FDS_BITS (s)[__FD_ELT(d)] |= __FD_MASK(d)))
#define __STDC_HOSTED__ 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 1
#define OS_NAME "Linux"
#define __CLOCK_T_TYPE __SLONGWORD_TYPE
#define __UINT32_TYPE__ unsigned int
#define __FLT32X_MIN_10_EXP__ (-307)
#define __UINTPTR_TYPE__ long unsigned int
#define CPU_IS_PPC
#define __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
#define __FSFILCNT64_T_TYPE __UQUAD_TYPE
#define _ARCH_PPC64 1
#define __DEC128_MANT_DIG__ 34
#define __LDBL_MIN_10_EXP__ (-291)
#define __FD_ELT(d) ((d) / __NFDBITS)
#define __attribute_deprecated__ __attribute__ ((__deprecated__))
#define __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
#define __SIZEOF_LONG_LONG__ 8
#define __USE_ATFILE 1
#define RLIMIT_STACK RLIMIT_STACK
#define _Bool _Bool
#define PRIO_MAX 20
#define __FLT128_DECIMAL_DIG__ 36
#define __WORDSIZE 64
#define __GCC_ATOMIC_LLONG_LOCK_FREE 2
#define __FLT_DECIMAL_DIG__ 9
#define __UINT_FAST16_MAX__ 0xffffffffffffffffUL
#define __LDBL_NORM_MAX__ 8.98846567431157953864652595394501288e+307L
#define __GCC_ATOMIC_SHORT_LOCK_FREE 2
#define __glibc_likely(cond) __builtin_expect ((cond), 1)
#define __FD_ISSET(d,s) ((__FDS_BITS (s)[__FD_ELT (d)] & __FD_MASK (d)) != 0)
#define __UINT_FAST8_TYPE__ unsigned char
#define __P(args) args
#define _CALL_ELF 2
#define __ATOMIC_ACQ_REL 4
#define __ATOMIC_RELEASE 3
#define __GLIBC_USE_LIB_EXT2 0
